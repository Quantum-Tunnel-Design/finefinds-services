name: Backend Service Deployment

on:
  push:
    branches:
      - dev
      - qa
      - staging
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        type: choice
        options:
          - dev
          - qa
          - staging
          - main
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - qa
          - staging
          - prod
      skip_deploy:
        description: 'Skip deployment (only build and push)'
        required: false
        type: boolean
        default: false

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: finefindslk/base/node-services
  ECR_REPOSITORY_BACKEND: finefinds-services

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build
        run: npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-${{ github.ref_name == 'main' && 'prod' || github.ref_name }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 3600
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Generate version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(date +'%Y%m%d').${{ github.run_number }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDPLATFORM=${{ runner.arch }}
            TARGETPLATFORM=${{ runner.arch }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}:${{ steps.version.outputs.version }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Save version for deployment
        run: echo "${{ steps.version.outputs.version }}" > version.txt
        
      - name: Upload version file
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

  deploy:
    needs: build-and-push
    if: ${{ !contains(github.event.head_commit.message, '[skip deploy]') }}
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download version file
        uses: actions/download-artifact@v4
        with:
          name: version
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-${{ github.ref_name == 'main' && 'prod' || github.ref_name }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 3600
          
      - name: Deploy to ECS
        run: |
          VERSION=$(cat version.txt)
          aws ecs update-service \
            --cluster finefinds-${{ github.ref_name }} \
            --service finefinds-backend \
            --force-new-deployment \
            --task-definition finefinds-backend:$VERSION
            
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() 